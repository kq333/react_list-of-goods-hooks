{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","SortType","App","useState","copyArrayList","setCopyArrayList","isReversed","setIsReversed","sortType","setSortType","getReorderedGoods","param","sort","a","b","localeCompare","length","reverse","AlpabetClassName","lengthClassName","reverseClassName","className","type","onClick","map","ListElem","ReactDOM","render","document","getElementById"],"mappings":"uOAIMA,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EACE,EADFA,EAEM,EAFNA,EAGI,EAGGC,EAAgB,WAC3B,MAA0CC,mBAAS,GAAD,OAAKH,IAAvD,mBAAOI,EAAP,KAAsBC,EAAtB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASF,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KAEMC,EAAoB,SAACC,GACX,iBAAVA,IACFN,EAAiB,YAAID,GAAeQ,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,OACnEL,EAAYR,IAGA,WAAVU,IACFN,EAAiB,YAAID,GAAeQ,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,WAChEP,EAAYR,IAGA,YAAVU,IACFN,EAAiB,YAAID,GAAea,WACpCV,GAAc,IAGF,UAAVI,IACFN,EAAiB,GAAD,OAAKL,IACrBO,GAAc,GACdE,EAAYR,KAIViB,EACDV,IAAaP,IAAsBK,GAClCE,IAAaP,GAAqBK,EAClC,iBACA,0BAEAa,EACDX,IAAaP,IAAoBK,GAChCE,IAAaP,GAAmBK,EAChC,oBACA,6BAEAc,EAAmBd,EACrB,oBACA,6BAEJ,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWH,EACXK,QAAS,kBAAMb,EAAkB,iBAHnC,iCAQA,wBACEY,KAAK,SACLD,UAAWF,EACXI,QAAS,kBAAMb,EAAkB,WAHnC,4BAQA,wBACEY,KAAK,SACLD,UAAWD,EACXG,QAAS,kBAAMb,EAAkB,YAHnC,qBAQCJ,GACC,wBACEgB,KAAK,SACLD,UAAU,4BACVE,QAAS,kBAAMb,EAAkB,UAHnC,sBAUJ,6BACGN,EAAcoB,KAAI,SAACC,GAAD,OACjB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCxGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bc1159eb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SortType = {\n  NONE: 0,\n  ALPHABET: 1,\n  LENGTH: 2,\n};\n\nexport const App: React.FC = () => {\n  const [copyArrayList, setCopyArrayList] = useState([...goodsFromServer]);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const getReorderedGoods = (param: string) => {\n    if (param === 'alphabetical') {\n      setCopyArrayList([...copyArrayList].sort((a, b) => a.localeCompare(b)));\n      setSortType(SortType.ALPHABET);\n    }\n\n    if (param === 'length') {\n      setCopyArrayList([...copyArrayList].sort((a, b) => a.length - b.length));\n      setSortType(SortType.LENGTH);\n    }\n\n    if (param === 'reverse') {\n      setCopyArrayList([...copyArrayList].reverse());\n      setIsReversed(true);\n    }\n\n    if (param === 'reset') {\n      setCopyArrayList([...goodsFromServer]);\n      setIsReversed(false);\n      setSortType(SortType.NONE);\n    }\n  };\n\n  const AlpabetClassName\n    = (sortType === SortType.ALPHABET && !isReversed)\n    || (sortType === SortType.ALPHABET && isReversed)\n      ? 'button is-info'\n      : 'button is-info is-light';\n\n  const lengthClassName\n    = (sortType === SortType.LENGTH && !isReversed)\n    || (sortType === SortType.LENGTH && isReversed)\n      ? 'button is-success'\n      : 'button is-success is-light';\n\n  const reverseClassName = isReversed\n    ? 'button is-warning'\n    : 'button is-warning is-light';\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={AlpabetClassName}\n          onClick={() => getReorderedGoods('alphabetical')}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={lengthClassName}\n          onClick={() => getReorderedGoods('length')}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={reverseClassName}\n          onClick={() => getReorderedGoods('reverse')}\n        >\n          Reverse\n        </button>\n\n        {isReversed && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => getReorderedGoods('reset')}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {copyArrayList.map((ListElem) => (\n          <li data-cy=\"Good\" key={ListElem}>\n            {ListElem}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}