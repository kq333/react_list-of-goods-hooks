{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","SortType","App","useState","copyArrayList","setCopyArrayList","isReversed","setIsReversed","sortType","setSortType","getReorderedGoods","param","sortedArray","sort","a","b","localeCompare","length","reverse","getButtonClassName","buttonType","className","type","onClick","map","listElem","ReactDOM","render","document","getElementById"],"mappings":"uOAIMA,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EACE,EADFA,EAEM,EAFNA,EAGI,EAGGC,EAAgB,WAC3B,MAA0CC,mBAAS,GAAD,OAAKH,IAAvD,mBAAOI,EAAP,KAAsBC,EAAtB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASF,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KAEMC,EAAoB,SAACC,GACzB,IAAIC,EAEJ,OAAQD,GACN,IAAK,eACHC,EAAcR,EACXS,MAAK,SAACC,EAAGC,GAAJ,OAAWT,EACbS,EAAEC,cAAcF,GAChBA,EAAEE,cAAcD,MACtBN,EAAYR,GACZ,MACF,IAAK,SACHW,EAAcR,EACXS,MAAK,SAACC,EAAGC,GAAJ,OAAWT,EACbS,EAAEE,OAASH,EAAEG,OACbH,EAAEG,OAASF,EAAEE,UACnBR,EAAYR,GACZ,MACF,IAAK,UACHW,EAAcR,EAAcc,UAC5BX,GAAeD,GACf,MACF,IAAK,QACHM,EAAW,UAAOZ,GAClBO,GAAc,GACdE,EAAYR,GACZ,MACF,QACEW,EAAcR,EAGlBC,EAAiB,YAAIO,KAGjBO,EAAqB,SAACC,GAK1B,OAHKZ,IAAaY,IAAed,GAC3BE,IAAaY,GAAcd,EAEf,iBAAmB,2BAGvC,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWF,EAAmBlB,GAC9BsB,QAAS,kBAAMb,EAAkB,iBAHnC,iCAQA,wBACEY,KAAK,SACLD,UAAWF,EAAmBlB,GAC9BsB,QAAS,kBAAMb,EAAkB,WAHnC,4BAQA,wBACEY,KAAK,SACLD,UAAWf,EACP,oBACA,6BACJiB,QAAS,kBAAMb,EAAkB,YALnC,sBAUEJ,GAAcE,IAAaP,IAC3B,wBACEqB,KAAK,SACLD,UAAU,4BACVE,QAAS,kBAAMb,EAAkB,UAHnC,sBAUJ,6BACGN,EAAcoB,KAAI,SAACC,GAAD,OACjB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC7GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.201fa012.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SortType = {\n  NONE: 0,\n  ALPHABET: 1,\n  LENGTH: 2,\n};\n\nexport const App: React.FC = () => {\n  const [copyArrayList, setCopyArrayList] = useState([...goodsFromServer]);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const getReorderedGoods = (param: string) => {\n    let sortedArray;\n\n    switch (param) {\n      case 'alphabetical':\n        sortedArray = copyArrayList\n          .sort((a, b) => (isReversed\n            ? b.localeCompare(a)\n            : a.localeCompare(b)));\n        setSortType(SortType.ALPHABET);\n        break;\n      case 'length':\n        sortedArray = copyArrayList\n          .sort((a, b) => (isReversed\n            ? b.length - a.length\n            : a.length - b.length));\n        setSortType(SortType.LENGTH);\n        break;\n      case 'reverse':\n        sortedArray = copyArrayList.reverse();\n        setIsReversed(!isReversed);\n        break;\n      case 'reset':\n        sortedArray = [...goodsFromServer];\n        setIsReversed(false);\n        setSortType(SortType.NONE);\n        break;\n      default:\n        sortedArray = copyArrayList;\n    }\n\n    setCopyArrayList([...sortedArray]);\n  };\n\n  const getButtonClassName = (buttonType: number) => {\n    const isActive\n      = (sortType === buttonType && !isReversed)\n      || (sortType === buttonType && isReversed);\n\n    return isActive ? 'button is-info' : 'button is-info is-light';\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={getButtonClassName(SortType.ALPHABET)}\n          onClick={() => getReorderedGoods('alphabetical')}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={getButtonClassName(SortType.LENGTH)}\n          onClick={() => getReorderedGoods('length')}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={isReversed\n            ? 'button is-warning'\n            : 'button is-warning is-light'}\n          onClick={() => getReorderedGoods('reverse')}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortType !== SortType.NONE) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => getReorderedGoods('reset')}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {copyArrayList.map((listElem) => (\n          <li data-cy=\"Good\" key={listElem}>\n            {listElem}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}